name: base

on:
  push:
    branches: [ main, base ]
    # Publish semver tags as releases.
    tags: [ 'v*.*.*' ]
  workflow_dispatch:

env:
  REGISTRY: docker.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: fj0rd/io


jobs:
  build:

    runs-on: ubuntu-latest
    if: ${{ !endsWith(github.event.head_commit.message, '~') }}
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: fj0rd
          password: ${{ secrets.DOCKER }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build base
        uses: docker/build-push-action@v4
        with:
          context: base
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:base
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            BASEIMAGE=debian:bookworm-slim

      - name: trigger io:base
        run: |
          for a in gateway vpn mihomo lego; do
            curl -L -X POST https://api.github.com/repos/fj0r/0x/actions/workflows/${a}.yml/dispatches \
              -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28" \
              -H "Authorization: Bearer ${{ secrets.ACTIONS_KEY }}" \
              -d '{"ref":"main","inputs":{}}'
          done

      - name: Build s3
        uses: docker/build-push-action@v4
        with:
          context: base
          file: base/s3.Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:s3
          labels: ${{ steps.meta.outputs.labels }}

      - name: Build common
        uses: docker/build-push-action@v4
        with:
          context: base
          file: base/common.Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:common
          labels: ${{ steps.meta.outputs.labels }}

      - name: trigger io:common
        run: |
          for a in sidecar ci; do
            curl -L -X POST https://api.github.com/repos/fj0r/0x/actions/workflows/${a}.yml/dispatches \
              -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28" \
              -H "Authorization: Bearer ${{ secrets.ACTIONS_KEY }}" \
              -d '{"ref":"main","inputs":{}}'
          done

      - name: Build
        uses: docker/build-push-action@v4
        with:
          context: box
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            PIP_FLAGS=--break-system-packages

      - name: trigger io:latest
        run: |
          for a in php java pg16 typst flink; do
            curl -L -X POST https://api.github.com/repos/fj0r/0x/actions/workflows/${a}.yml/dispatches \
              -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28" \
              -H "Authorization: Bearer ${{ secrets.ACTIONS_KEY }}" \
              -d '{"ref":"main","inputs":{}}'
          done

      #- name: Build Code-Server
      #  uses: docker/build-push-action@v4
      #  with:
      #    context: code
      #    file: code/Dockerfile
      #    push: ${{ github.event_name != 'pull_request' }}
      #    tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:code
      #    labels: ${{ steps.meta.outputs.labels }}
