name: base-stable

on:
  push:
    branches: [ main, base, stable ]
    # Publish semver tags as releases.
    tags: [ 'v*.*.*' ]

env:
  REGISTRY: docker.io
  # github.repository as <account>/<repo>
  USER_NAME: fj0rd
  IMAGE_NAME: fj0rd/io


jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ env.USER_NAME }}
          password: ${{ secrets.DOCKER }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build base
        uses: docker/build-push-action@v4
        with:
          context: base
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:base-stable
          labels: ${{ steps.meta.outputs.labels }}
          build-args: BASEIMAGE=ubuntu:jammy


      - name: Build
        uses: docker/build-push-action@v4
        with:
          context: box
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:stable
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            BASEIMAGE=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:base-stable
            PIP_FLAGS=


