name: jpl

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  workflow_run:
    workflows: ["base"]
    branches: [ main ]
    types:
      - completed

env:
  REGISTRY: docker.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: fj0rd/io


jobs:
  build:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@28218f9b04b4f3f62068d7b6ce6ca5b26e35336c
        with:
          registry: ${{ env.REGISTRY }}
          username: fj0rd
          password: ${{ secrets.DOCKER }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build torch
        uses: docker/build-push-action@v2
        with:
          context: py
          file: py/torch.Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:torch
          labels: ${{ steps.meta.outputs.labels }}

      - name: Build jpl base
        uses: docker/build-push-action@v2
        with:
          context: jpl
          file: jpl/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:jpl
          labels: ${{ steps.meta.outputs.labels }}

      - name: Build jpl go
        uses: docker/build-push-action@v2
        with:
          context: jpl
          file: jpl/go.Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:jpl
          labels: ${{ steps.meta.outputs.labels }}

      - name: Build jpl rust
        uses: docker/build-push-action@v2
        with:
          context: jpl
          file: jpl/rs.Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:jpl
          labels: ${{ steps.meta.outputs.labels }}

      - name: Build jpl haskell
        uses: docker/build-push-action@v2
        with:
          context: jpl
          file: jpl/hs.Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:jpl
          labels: ${{ steps.meta.outputs.labels }}
